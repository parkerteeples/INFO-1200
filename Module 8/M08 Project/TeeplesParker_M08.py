#Name: Parker Teeples
#Class: INFO 1200
#Section: See syllabus, schedule, or Canvas course for section number
#Professor: Tyler Barth
#Date:
#Project #: M08
#By submitting this assignment, I declare that the source code contained in this assignment was written s
#olely by me, unless specifically provided in the assignment. I attest that no part of this assignment, i
#n whole or in part, was generated by Generative Artificial Intelligence (e.g., ChatGPT, Gemini, Copilot, 
#Claude, etc.) nor obtained from a paid solution service (e.g., Chegg, Course Hero, Bartleby, etc.). I un
#derstand that copying any source code, in whole or in part, constitutes cheating, and that I will receiv
#e a zero on this project if I am found in violation of this policy.

def display_title(): # define display_title function
    print("Parker Teeples' Wizard Inventory Game") # prints "Parker Teeples' Wizard Inventory Game"
    print() # print blank line

def display_menu(): # define display_title function
    print('COMMAND MENU') # print 'COMMAND MENU'
    print() # print blank line
    print('show - Show all items') # print 'show - Show all items'
    print('grab - Grab an item') # print 'grab - Grab an item'
    print('edit - Edit an item') # print 'edit - Edit an item'
    print('drop - Drop an item') # print 'drop - Drop an item'
    print('exit - Exit program') # print 'exit - Exit program'

def main(): # define main function
    display_title() # call the display_title function
    display_menu() # call the display_menu function
    inventory = ["staff", "potion", "omelette"] # make a list with "staff", "potion", "omelette"
    while True: # while true
        command = input("Command: ") # input for command 
        if command == "show": # if command is "show"
            show(inventory) # call the function show with the argument inventory
        elif command == "grab": # else if command is "grab"
            grab_item(inventory) # call the function grab_item with the argument inventory
        elif command == "edit": # else if command is "edit"
            edit_item(inventory) # call the function edit_item with the argument inventory
        elif command == "drop": # else if command is "drop"
            drop_item(inventory) # call the function drop_item with the argument inventory
        elif command == "exit": # else if command is "exit"
            break # break loop
        else: # else
            print("Not a valid command. Please try again.\n") # print "Not a valid command. Please try again.\n"
    print("Bye!") # print "Bye!"

def show(inventory): # define show function with the parameter inventory
    for number, item in enumerate(inventory, start=1): # for number of item in the enumerate of inventory starting at 1
        print(f"{number}. {item}") # print number. item
        print() # print blank line

def grab_item(inventory): # define grab_item function with the parameter inventory
    if len(inventory) >= 4: # If the number of items is more than or equal to 4
        print("You can't carry any more items. Drop something first.\n") # print "You can't carry any more items. Drop something first"
    else: # else
        item = input("Name: ") # item = input("Name: ")
        inventory.append(item) # the user type in the item name and store it in a variable named item
        print(f"{item} was added.\n") # print "{item} was added"

def edit_item(inventory): # define edit_item function with the parameter inventory
    number = int(input("Number: ")) # store the input as an int into number
    if number < 1 or number > len(inventory): # if number is less than 1 or bigger than length of inventory
        print("Invalid item number.\n") # print "Invalid item number.\n"
    else: # else
        item = input("Updated name: ") # put the input into item
        inventory[number-1] = item # inventory position number minus one is item
        print(f"Item number {number} was updated.\n") # print "Item number {number} was updated.\n"

def drop_item(inventory): # define the function drop_item with the parameter inventory
    number = int(input("Number: ")) # store the input as an int in number
    if number < 1 or number > len(inventory): # if number is less than 1 or bigger than length of inventory
        print("Invalid item number.\n") # print "Invalid item number.\n"
    else: # else
        item = inventory.pop(number-1) # set item to inventory but pop the place of number - 1
        print(f"{item} was dropped.\n") # print "{item} was dropped.\n"


if __name__ == '__main__': # if name is main 
    main() # call main