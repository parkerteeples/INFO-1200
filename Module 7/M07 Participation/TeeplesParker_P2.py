#Name: Parker Teeples
#Class: INFO 1200
#Section: See syllabus, schedule, or Canvas course for section number
#Professor: Tyler Bartholomew
#Date: 11/1/24
#Project #: MO7_P2
#By submitting this assignment, I declare that the source code contained in this assignment was written s
#olely by me, unless specifically provided in the assignment. I attest that no part of this assignment, i
#n whole or in part, was generated by Generative Artificial Intelligence (e.g., ChatGPT, Gemini, Copilot, 
#Claude, etc.) nor obtained from a paid solution service (e.g., Chegg, Course Hero, Bartleby, etc.). I un
#derstand that copying any source code, in whole or in part, constitutes cheating, and that I will receiv
#e a zero on this project if I am found in violation of this policy.

import tkinter as tk # import tkinter as tk
from tkinter import ttk, messagebox # from the tkinter library import ttk and messagebox

def main(): # define main function
    labalwelcome = ttk.Label(frame, text = "Decimal, Hexidecimal, and Binary converter").pack() # label for welcome
    labalselect = ttk.Label(frame, text = "Which Notation Is Your Number?").pack() # label for instructions
    buttonbin = ttk.Button(frame, text = 'Binary', command = frombin).pack() # button for selecting binary
    buttondec = ttk.Button(frame, text = 'Decimal', command = fromdec).pack() # button for selecting decimal
    buttonhex = ttk.Button(frame, text = 'Hexadecimal', command = fromhex).pack() # button for selecting hexadecimal
    entrynum = ttk.Entry(frame, width = 25, textvariable = usernum).pack() # entry for user number
    labelbinplace = ttk.Label(frame, text = "Binary:").pack() # label for binary placeholder
    labelbin = ttk.Label(frame, textvariable = binvar).pack() # label for displaying results
    labeldecplace = ttk.Label(frame, text = "Decimal:").pack() # label for decimal placeholder
    labeldec = ttk.Label(frame, textvariable = decvar).pack() # label for displaying results
    labelhexplace = ttk.Label(frame, text = "Hexadecimal:").pack() # label for hexidecimal placeholder
    labeldhex = ttk.Label(frame, textvariable = hexvar).pack() # label for displaying results

def frombin(): # define frombin
    numset = '10' # numbers allowed to continue
    num = str(usernum.get()) # make num the user input
    for char in num: # loop for the amount of charicters in mum
        if char not in numset: # if charicter is not in numset
            messagebox.showerror("Error","This Number is NOT in Binary Notation") # display error message
            return # return
        else: # if is in numset
            pass # pass
    deci = int(num, 2) # convert num to decimal
    hexi = hex(deci) # convert decimal to hexadecimal
    hexi = hexi[2:] # format so that the number doesn't include that weird prefix thing
    binvar.set(num) # set binvar to num
    decvar.set(deci) # set decvar to deci
    hexvar.set(hexi) # set hexvar to hexi

def fromdec(): # define fromdec
    numset = '1234567890' # numbers allowed to continue
    num = str(usernum.get()) # make num the user input
    for char in num: # loop for the amount of charicters in mum
        if char not in numset: # if charicter is not in numset
            messagebox.showerror("Error","This Number is NOT in Decimal Notation") # display error message
            return # return
        else: # if is in numset
            pass # pass
    num = int(num) # convert num to an int
    bina = bin(num) # convert num to binary
    bina = bina[2:] # format so that the number doesn't include that weird prefix thing
    hexi = hex(num) # convert num to Hexadecimal
    hexi = hexi[2:] # format so that the number doesn't include that weird prefix thing
    binvar.set(bina) # set binvar to bina
    decvar.set(num) # set decvar to num
    hexvar.set(hexi) # set hexvar to hexi

def fromhex():
    numset = '1234567890abcdef' # numbers allowed to continue
    num = str(usernum.get()) # make num the user input
    for char in num: # loop for the amount of charicters in mum
        if char not in numset: # if charicter is not in numset
            messagebox.showerror("Error","This Number is NOT in Hexadecimal Notation") # display error message
            return # return
        else: # if is in numset
            pass # pass
    deci = int(num, 16) # convert num to decimal
    bina = bin(deci) # convert decimal to binary
    bina = bina[2:] # format so that the number doesn't include that weird prefix thing
    binvar.set(bina) # set binvar to bina
    decvar.set(deci) # set decvar to deci
    hexvar.set(num)# set hexvar to num

window = tk.Tk() # set tk thing to window
window.geometry('500x500+500+0') # set posistion and size of window
frame = ttk.Frame(window, padding = "30 30 30 30").pack() # set frame

binvar = tk.StringVar() # set binvar
decvar = tk.StringVar() # set decvar
hexvar = tk.StringVar() # set hexvar
usernum = tk.StringVar() # set usernum

if __name__ == '__main__': # if name is main
    main() # call main

window.mainloop() # window mainloop