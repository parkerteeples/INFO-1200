#Name: Parker Teeples
#Class: INFO 1200
#Section: See syllabus, schedule, or Canvas course for section number
#Professor: Tyler Bartholomew
#Date: 11/6/24
#Project #: M07_P2
#By submitting this assignment, I declare that the source code contained in this assignment was written s
#olely by me, unless specifically provided in the assignment. I attest that no part of this assignment, i
#n whole or in part, was generated by Generative Artificial Intelligence (e.g., ChatGPT, Gemini, Copilot, 
#Claude, etc.) nor obtained from a paid solution service (e.g., Chegg, Course Hero, Bartleby, etc.). I un
#derstand that copying any source code, in whole or in part, constitutes cheating, and that I will receiv
#e a zero on this project if I am found in violation of this policy.

import tkinter as tk # import tkinter as tk
from tkinter import ttk, messagebox # from the tkinter library import ttk and messagebox

def close(): # define close program
    root.destroy() # close window

def plusone(): # define plusone function
    check() # run check function
    countvar.set(str(float(countvar.get()) + 1)) # set countvar as countvar + 1

def minusone(): # define minusone function
    check() # run check function
    countvar.set(str(float(countvar.get()) - 1)) # set countvar as countvar - 1

def multiply(): # define multiply function
    check() # run check function
    countvar.set(str(float(countvar.get()) * 2)) # set countvar as countvar * 2

def divide(): # define divide function
    check() # run check function
    countvar.set(str(float(countvar.get()) / 2)) # set countvar as countvar / 2

def clear(): # define clear function
    countvar.set('0')

def check(): # define check function
    numset = '1234567890.' # numbers allowed to continue
    num = str(countvar.get()) # make num the user input
    for char in num: # loop for the amount of charicters in mum
        if char not in numset: # if charicter is not in numset
            messagebox.showerror("Error","Only Numbers Are Accepted") # display error message
            return # return
        else: # if is in numset
            pass # pass

root = tk.Tk() # set window as root
root.geometry('500x500+2500+100') # set window geometry
frame = ttk.Frame(root, padding = "15 15 15 15") # set frame
frame.pack(fill = tk.BOTH, expand = True) # pack frame
root.title('Module 7 Project') # make window title as 'Module 7 Project'

countvar = tk.StringVar() # set the countvar for tkinter
countvar.set('0') # set countvar as 0

labelcount = tk.Label(frame, text='Enter A Number, Then Choose What To Do').pack() # label to explain program
entrycount = tk.Entry(frame, width=10, textvariable=countvar).pack() # Entry for count result
buttonplus = tk.Button(frame, text='Add One', command=plusone).pack() # button for plus one
buttonminus = tk.Button(frame, text='Minus One', command=minusone).pack() # button for minus one
buttonmultiply = tk.Button(frame, text='Multiply By Two', command=multiply).pack() # button for multiply
buttondivide = tk.Button(frame, text='Divide By Two', command=divide).pack() # button for divide
buttonclear = tk.Button(frame, text='Clear', command=clear).pack() # button for clear
buttonexit = tk.Button(frame, text='Exit',command=close).pack() # button for exit command

root.mainloop() # root mainloop